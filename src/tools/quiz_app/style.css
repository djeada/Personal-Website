:root {
    /* Color palette */
    --bg: #f7f9fc;
    --surface: #ffffff;
    --on-surface: #2d2d2d;
    --primary: #3366ff;
    --primary-hover: #254edd;
    --border: #e0e4eb;
    --shadow-light: rgba(50, 50, 93, 0.05);
    --shadow-strong: rgba(0, 0, 0, 0.1);
    --success: #2ec27e;
    --error: #e05454;

    /* Typography & spacing */
    --font-family: 'Inter', sans-serif;
    --radius: 12px;
    --gutter: 18px;
    --transition: 0.25s ease;
}

* {
    box-sizing: border-box;
}

body {
    margin: 0;
    background: var(--bg);
    color: var(--on-surface);
    font-family: var(--font-family);
    line-height: 1.5;
}

.container {
    max-width: 640px;
    margin: var(--gutter) auto;
    padding: calc(var(--gutter) * 1.5);
    background: var(--surface);
    border-radius: var(--radius);
    box-shadow: 0 4px 16px var(--shadow-light);
}

/* Add to your stylesheet */
.spinner-overlay {
    position: fixed;
    /* always relative to viewport */
    inset: 0;
    /* shorthand for top:0; right:0; bottom:0; left:0 */
    display: flex;
    align-items: center;
    /* vertical center */
    justify-content: center;
    /* horizontal center */
    background: rgba(var(--on-surface-rgb), 0.25);
    z-index: 1000;
}


/* spinning circle */
.spinner {
    width: 3rem;
    height: 3rem;
    border: 4px solid var(--border);
    border-top-color: var(--primary);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

.controls {
    display: grid;
    gap: var(--gutter);
    padding: var(--gutter);
    background: var(--surface);
    border: 1px solid var(--border);
    border-radius: var(--radius);
    box-shadow: 0 2px 8px var(--shadow-light);
}

.controls select,
.controls input[type="number"],
.controls button {
    width: 100%;
    padding: 0.9em;
    font-size: 1rem;
    font-family: var(--font-family);
    border: 1px solid var(--border);
    border-radius: var(--radius);
    background: var(--bg);
    color: var(--on-surface);
    transition: border-color var(--transition), box-shadow var(--transition);
}

.controls select:focus,
.controls input[type="number"]:focus {
    outline: none;
    border-color: var(--primary);
    box-shadow: 0 0 0 3px rgba(51, 102, 255, 0.2);
}

.controls button {
    background: var(--primary);
    color: #fff;
    border: none;
    cursor: pointer;
}

.controls button:hover {
    background: var(--primary-hover);
    box-shadow: 0 4px 12px var(--shadow-light);
}

#quizContainer .question {
    margin: calc(var(--gutter) * 1.5) 0;
    padding: calc(var(--gutter) * 1.25);
    /* a bit more room for the drop-shadow */
    background: var(--bg);
    border: 1px solid var(--border);
    border-radius: var(--radius);
    transition: box-shadow var(--transition), background var(--transition);
}


#quizContainer .question>p {
    font-weight: 600;
    margin-bottom: calc(var(--gutter) * 0.5);
    padding-bottom: calc(var(--gutter) * 0.75);
    position: relative;
}

#quizContainer .question:hover {
    box-shadow: 0 6px 18px var(--shadow-light);
}

.question {
    font-size: 1.25rem;
    margin-bottom: var(--gutter);
}

/* ---------- Option list ---------- */
.options {
    display: grid;
    gap: 0.9em;
    /* controls vertical rhythm */
}

.options label {
    display: flex;
    align-items: flex-start;
    /* keeps bullet & first text line aligned */
    padding: 0.65em 0.75em;
    border-radius: var(--radius);
    line-height: 1.45;
    cursor: pointer;
    transition: background var(--transition), box-shadow var(--transition);
}

/* removes the giant gap produced by margin-bottom: 2em */
.options input[type="radio"] {
    margin: 0 0.85em 0 0;
    /* horizontal gap only */
    transform: scale(1.25);
    flex-shrink: 0;
    /* keep constant width */
    accent-color: var(--primary);
}

/* ---------- Interaction states ---------- */
.options label:hover {
    background: var(--surface);
    /* stronger hover feedback */
}

.options input[type="radio"]:focus-visible {
    outline: 2px solid var(--primary);
    outline-offset: 2px;
}

.options input[type="radio"]:checked+span,
.options input[type="radio"]:checked+strong {
    font-weight: 600;
}

.options input[type="radio"]:checked~label {
    /* entire row tint when selected */
    background: rgba(51, 102, 255, 0.08);
}

/* ---------- Dark mode tweaks ---------- */
.dark-mode .options label:hover {
    background: rgba(255, 255, 255, 0.05);
}

.dark-mode .options input[type="radio"]:checked~label {
    background: rgba(94, 139, 255, 0.15);
}

.buttons {
    display: flex;
    justify-content: center;
    gap: var(--gutter);
    margin-top: var(--gutter);
}

.buttons button {
    padding: 0.8em 2em;
    font-size: 1rem;
    border-radius: var(--radius);
    background: var(--primary);
    color: #fff;
    border: none;
    cursor: pointer;
    transition: background var(--transition), box-shadow var(--transition);
}

.buttons button:hover {
    background: var(--primary-hover);
    box-shadow: 0 4px 16px var(--shadow-light);
}

.correct {
    background: var(--success) !important;
    color: #fff !important;
}

.incorrect {
    background: var(--error) !important;
    color: #fff !important;
}

@media (max-width: 600px) {
    .container {
        padding: var(--gutter);
    }

    .options input[type="radio"] {
        transform: scale(1.2);
    }
}

/* Dark Mode */
.dark-mode {
    --bg: #1b1b1d;
    --surface: #2a2a2e;
    --on-surface: #e4e4e6;
    --border: #3c3c42;
    --shadow-light: rgba(0, 0, 0, 0.6);
    --primary: #5e8bff;
    --primary-hover: #4a75e0;
    --success: #3dd598;
    --error: #ff7070;
}